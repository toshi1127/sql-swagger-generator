/*
 * TestService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"time"
)

// User struct for User
type User struct {
	UserId *string `json:"user_id,omitempty"`
	NickName string `json:"nick_name"`
	ProfileImageUri *string `json:"profile_image_uri,omitempty"`
	Email string `json:"email"`
	Description *string `json:"description,omitempty"`
	SocialLink *string `json:"social_link,omitempty"`
	Gender *string `json:"gender,omitempty"`
	IdentifyStatus *string `json:"identify_status,omitempty"`
	CustomerId *string `json:"customer_id,omitempty"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
}

// NewUser instantiates a new User object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUser(nickName string, email string, createdAt time.Time, updatedAt time.Time, ) *User {
	this := User{}
	this.NickName = nickName
	this.Email = email
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewUserWithDefaults instantiates a new User object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWithDefaults() *User {
	this := User{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *User) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *User) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *User) SetUserId(v string) {
	o.UserId = &v
}

// GetNickName returns the NickName field value
func (o *User) GetNickName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NickName
}

// GetNickNameOk returns a tuple with the NickName field value
// and a boolean to check if the value has been set.
func (o *User) GetNickNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NickName, true
}

// SetNickName sets field value
func (o *User) SetNickName(v string) {
	o.NickName = v
}

// GetProfileImageUri returns the ProfileImageUri field value if set, zero value otherwise.
func (o *User) GetProfileImageUri() string {
	if o == nil || o.ProfileImageUri == nil {
		var ret string
		return ret
	}
	return *o.ProfileImageUri
}

// GetProfileImageUriOk returns a tuple with the ProfileImageUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetProfileImageUriOk() (*string, bool) {
	if o == nil || o.ProfileImageUri == nil {
		return nil, false
	}
	return o.ProfileImageUri, true
}

// HasProfileImageUri returns a boolean if a field has been set.
func (o *User) HasProfileImageUri() bool {
	if o != nil && o.ProfileImageUri != nil {
		return true
	}

	return false
}

// SetProfileImageUri gets a reference to the given string and assigns it to the ProfileImageUri field.
func (o *User) SetProfileImageUri(v string) {
	o.ProfileImageUri = &v
}

// GetEmail returns the Email field value
func (o *User) GetEmail() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *User) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *User) SetEmail(v string) {
	o.Email = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *User) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *User) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *User) SetDescription(v string) {
	o.Description = &v
}

// GetSocialLink returns the SocialLink field value if set, zero value otherwise.
func (o *User) GetSocialLink() string {
	if o == nil || o.SocialLink == nil {
		var ret string
		return ret
	}
	return *o.SocialLink
}

// GetSocialLinkOk returns a tuple with the SocialLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetSocialLinkOk() (*string, bool) {
	if o == nil || o.SocialLink == nil {
		return nil, false
	}
	return o.SocialLink, true
}

// HasSocialLink returns a boolean if a field has been set.
func (o *User) HasSocialLink() bool {
	if o != nil && o.SocialLink != nil {
		return true
	}

	return false
}

// SetSocialLink gets a reference to the given string and assigns it to the SocialLink field.
func (o *User) SetSocialLink(v string) {
	o.SocialLink = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *User) GetGender() string {
	if o == nil || o.Gender == nil {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetGenderOk() (*string, bool) {
	if o == nil || o.Gender == nil {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *User) HasGender() bool {
	if o != nil && o.Gender != nil {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *User) SetGender(v string) {
	o.Gender = &v
}

// GetIdentifyStatus returns the IdentifyStatus field value if set, zero value otherwise.
func (o *User) GetIdentifyStatus() string {
	if o == nil || o.IdentifyStatus == nil {
		var ret string
		return ret
	}
	return *o.IdentifyStatus
}

// GetIdentifyStatusOk returns a tuple with the IdentifyStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetIdentifyStatusOk() (*string, bool) {
	if o == nil || o.IdentifyStatus == nil {
		return nil, false
	}
	return o.IdentifyStatus, true
}

// HasIdentifyStatus returns a boolean if a field has been set.
func (o *User) HasIdentifyStatus() bool {
	if o != nil && o.IdentifyStatus != nil {
		return true
	}

	return false
}

// SetIdentifyStatus gets a reference to the given string and assigns it to the IdentifyStatus field.
func (o *User) SetIdentifyStatus(v string) {
	o.IdentifyStatus = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *User) GetCustomerId() string {
	if o == nil || o.CustomerId == nil {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetCustomerIdOk() (*string, bool) {
	if o == nil || o.CustomerId == nil {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *User) HasCustomerId() bool {
	if o != nil && o.CustomerId != nil {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *User) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *User) GetCreatedAt() time.Time {
	if o == nil  {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *User) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *User) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *User) GetUpdatedAt() time.Time {
	if o == nil  {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *User) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *User) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *User) GetDeletedAt() time.Time {
	if o == nil || o.DeletedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || o.DeletedAt == nil {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *User) HasDeletedAt() bool {
	if o != nil && o.DeletedAt != nil {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *User) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

func (o User) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}
	if true {
		toSerialize["nick_name"] = o.NickName
	}
	if o.ProfileImageUri != nil {
		toSerialize["profile_image_uri"] = o.ProfileImageUri
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.SocialLink != nil {
		toSerialize["social_link"] = o.SocialLink
	}
	if o.Gender != nil {
		toSerialize["gender"] = o.Gender
	}
	if o.IdentifyStatus != nil {
		toSerialize["identify_status"] = o.IdentifyStatus
	}
	if o.CustomerId != nil {
		toSerialize["customer_id"] = o.CustomerId
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.DeletedAt != nil {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	return json.Marshal(toSerialize)
}

type NullableUser struct {
	value *User
	isSet bool
}

func (v NullableUser) Get() *User {
	return v.value
}

func (v *NullableUser) Set(val *User) {
	v.value = val
	v.isSet = true
}

func (v NullableUser) IsSet() bool {
	return v.isSet
}

func (v *NullableUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUser(val *User) *NullableUser {
	return &NullableUser{value: val, isSet: true}
}

func (v NullableUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
